version: '3.9'

services:
  traefik:
    image: traefik:v2.9.4
    container_name: traefik
    networks:
      - strapi
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.service=api@internal
  strapi:
    container_name: strapi-dev
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.dev
    restart: unless-stopped
    networks:
      - strapi
    env_file: ./apps/api/.env
    volumes:
      - ./apps/api/config:/app/apps/api/config
      - ./apps/api/src:/app/apps/api/src
      - ./apps/api/package.json:/app/apps/api/package.json
      - ./apps/api/.env:/app/apps/api/.env
      - ./apps/api/public/uploads:/app/apps/api/public/uploads
    labels:
      - traefik.enable=true
      - traefik.http.routers.strapi.rule=Host(`api.localhost`)
      - traefik.http.services.strapi.loadbalancer.server.port=1337
  strapiDB:
    image: mysql:8
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    networks:
      - strapi
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    env_file: ./apps/api/.env
    volumes:
      - strapi-data:/var/lib/mysql
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - 3306:3306
  frontend:
    container_name: frontend-dev
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile.dev
    restart: always
    networks:
      - strapi
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`localhost`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000
    volumes:
      - ./apps/frontend/src:/app/apps/frontend/src
      - ./apps/frontend/package.json:/app/apps/frontend/package.json
      - ./apps/frontend/.env:/app/apps/frontend/.env
      - ./apps/frontend/public:/app/apps/frontend/public
    # Add more containers below (nginx, postgres, etc.)
    # Define a network, which allows containers to communicate
    # with each other, by using their container name as a hostname

volumes:
  strapi-data:


networks:
  strapi:
    name: Strapi
    driver: bridge
