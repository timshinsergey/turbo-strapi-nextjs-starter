version: "3.8"

services:
  strapi:
    image: {{ env.BACKEND_IMAGE_URL }}
    container_name: strapi
    restart: unless-stopped
    networks:
      - strapi
    depends_on:
      - strapiDB
    environment:
      DATABASE_CLIENT: {{ env.DATABASE_CLIENT }}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: {{ env.DATABASE_NAME }}
      DATABASE_USERNAME: {{ env.DATABASE_USERNAME }}
      DATABASE_PORT: {{ env.DATABASE_PORT }}
      DATABASE_PASSWORD: {{ env.DATABASE_PASSWORD }}
      APP_KEYS: {{ env.APP_KEYS }}
      API_TOKEN_SALT: {{ env.API_TOKEN_SALT }}
      JWT_SECRET: {{ env.JWT_SECRET }}
      ADMIN_JWT_SECRET: {{ env.ADMIN_JWT_SECRET }}
      AWS_ACCESS_KEY_ID: {{ env.AWS_ACCESS_KEY_ID }}
      AWS_ACCESS_SECRET: {{ env.AWS_ACCESS_SECRET }}
      AWS_REGION: {{ env.AWS_REGION }}
      AWS_BUCKET: {{ env.AWS_BUCKET }}
      STRAPI_PLUGIN_I18N_INIT_LOCALE_CODE: {{ env.STRAPI_PLUGIN_I18N_INIT_LOCALE_CODE }}
      NODE_ENV: {{ env.NODE_ENV }}
    volumes:
      - ./apps/api/config:/app/apps/api/config
      - ./apps/api/src:/app/apps/api/src
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./apps/api/.env:/app/apps/api/.env
      - ./apps/api/public/uploads:/app/apps/api/public/uploads
    # for domain connection
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strapi.rule=Host(`api.{{ env.DOMAIN }}`)"
      - "traefik.http.routers.strapi.tls.certresolver=le"
      - "traefik.http.routers.strapi.entrypoints=websecure"
      - "traefik.http.routers.strapi.tls=true"
      - "traefik.http.routers.strapi.tls.domains[0].main=api.{{ env.DOMAIN }}"
      - "traefik.http.routers.strapi.tls.domains[0].sans=www.api.{{ env.DOMAIN }}"
      - "traefik.http.services.strapi.loadbalancer.server.port=1337"
  strapiDB:
    image: mysql:8
    container_name: strapiDB
    restart: unless-stopped
    networks:
      - strapi
    volumes:
      - strapi-data:/var/lib/mysql
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - 3306:3306
    environment:
      MYSQL_USER: {{ env.DATABASE_USERNAME }}
      MYSQL_ROOT_PASSWORD: {{ env.DATABASE_PASSWORD }}
      MYSQL_PASSWORD: {{ env.DATABASE_PASSWORD }}
      MYSQL_DATABASE: {{ env.DATABASE_NAME }}
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  front:
    image: {{ env.FRONT_IMAGE_URL }}
    container_name: front
    restart: unless-stopped
    networks:
      - strapi
    environment:
      ENV_VARIABLE: {{ env.ENV_VARIABLE }}
      NEXT_PUBLIC_ENV_VARIABLE: {{ env.NEXT_PUBLIC_ENV_VARIABLE }}
      ANALYZE: {{ env.ANALYZE }}
      NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID: {{ env.NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID }}
    # for domain connection
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`{{ env.DOMAIN }}`)"
      - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.domains[0].main={{ env.DOMAIN }}"
      - "traefik.http.routers.frontend.tls.domains[0].sans=www.{{ env.DOMAIN }}"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
  traefik:
    image: traefik:v2.9.4
    container_name: traefik
    restart: unless-stopped
    networks:
      - strapi
    volumes:
      - /letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    command:
      - "--api.dashboard=true"
      - "--log.level=warning"
      - "--accesslog.format=json"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.http.tls=true"
      # ports
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # redirect http to https
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      # let's encrypt certificates
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.email={{ env.CERTS_EMAIL }}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      # Note that Let's Encrypt API has rate limiting.
      # Use Let's Encrypt staging server with the caServer configuration option when experimenting to avoid hitting this limit too fast.
      - "--certificatesresolvers.le.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wwwsecure-catchall.rule=hostregexp(`{host:(www\\.).+}`)"
      - "traefik.http.routers.wwwsecure-catchall.middlewares=wwwtohttps"
      - "traefik.http.routers.wwwsecure-catchall.entrypoints=websecure"
      - "traefik.http.routers.wwwsecure-catchall.tls=true"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.regex=^https?://(?:www\\.)?(.+)"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.replacement=https://$${1}"
      # dashboard
      - "traefik.http.routers.traefik.rule=Host(`traefik.{{ env.DOMAIN }}`)"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.tls.domains[0].main=traefik.{{ env.DOMAIN }}"
      - "traefik.http.routers.traefik.tls.domains[0].sans=www.traefik.{{ env.DOMAIN }}"
      # Note: all dollar signs in the hash need to be doubled for escaping.
      # Passwords must be hashed using BCrypt.
      - "traefik.http.middlewares.auth.basicauth.users={{ env.TRAEFIK_DASHBOARD_LOGIN }}:{{ env.TRAEFIK_DASHBOARD_PASSWORD }}"

# Add more containers below (nginx, postgres, etc.)
# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
volumes:
  letsencrypt:
  strapi-data:

networks:
  strapi:
    driver: bridge
